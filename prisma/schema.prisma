generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider  = "postgres"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  firstName   String
  lastName    String
  email       String     @unique
  phoneNumber String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  vehicles    Vehicle[]
  Purchase    Purchase[]
}

model Vehicle {
  id            String         @id @default(cuid())
  make          String
  model         String
  year          Int
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  subscriptions Subscription[]
}

model Subscription {
  id        String    @id @default(cuid())
  type      String // subscription type (e.g., monthly)
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  vehicle   Vehicle   @relation(fields: [vehicleId], references: [id])
  vehicleId String
  payments  Payment[]
}

model Payment {
  id             String       @id @default(cuid())
  amount         Float
  status         String // payment status (e.g., success, failed, pending)
  paymentDate    DateTime
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  subscription   Subscription @relation(fields: [subscriptionId], references: [id])
  subscriptionId String
}

model Purchase {
  id           String   @id @default(cuid())
  amount       Float
  purchaseDate DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       String
}
